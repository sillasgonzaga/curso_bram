10 * 9
8 / 7
R.Version()
source('~/R/Projetos/curso_bram_2/meu_primeiro_script.R', echo=TRUE)
10 * 9
8 / 7
10 * 9
8 / 7
7/ 0
feslrefnfkrgfnerkjnfmgk
4 / 9
10 * 9
8 / 7
feslrefnfkrgfnerkjnfmgk
4 / 9
10 * 9
8 / 7
feslrefnfkrgfnerkjnfmgk
4 / 9
source('~/R/Projetos/curso_bram_2/meu_primeiro_script.R', echo=TRUE)
source('~/R/Projetos/curso_bram_2/meu_primeiro_script.R', echo=TRUE)
10 * 9
8 / 7
feslrefnfkrgfnerkjnfmgk
4 / 9
source('~/R/Projetos/curso_bram_2/meu_primeiro_script.R', echo=TRUE)
8 / 7 # isso é uma multiplicação
8 / 7  isso é uma multiplicação
8 / 7 # isso é uma multiplicação
7 * 9 + 2 * 6
2.5 * 4
(50 + 7)/(8 * (3 - 5/2))
3 ^ 4
# criando objetos
x
# criando objetos
x = 10
# segunda sintaxe:
y <- 11
x
y
x
y
x
z
x + 6
x - y
x + 4 * y
x <- 7
x
rm(x)
x
x + 6
sqrt(9)
sqrt(y)
1 == 1
1 == 2
1 == 1.1
"a" == "a"
"A" == "A"
"a" == "A"
round(3.311165)
help(round)
?round
# especificando o outro parametro da função round()
round(3.311516516, 3)
# especificando o outro parametro da função round()
round(3.311516516)
# especificando o outro parametro da função round()
round(3.311516516, 3)
# especificando o parametro pelo nome
round(x = 4.151441461841, digits = 5)
round(digits = 4, x = 1.36541684131065)
round(4, 1.36541684131065)
round(y/3, digits = 2)
x = 7/17
x
round(x = x, digits = 3)
x
sqrt(17)
sqrt(23)
round(sqrt(23), 2)
round(sqrt(23), 2)
install.packages(" bshjbcedjhbej")
library(tidyverse)
library(ggplot2)
library(ggplot3)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
getwd()
read_csv("senado.csv")
read_csv("senado.csv")
read_csv("senado.csv")
df <- read_csv("senado.csv")
df
getwd()
# ctrl L
library(tidyverse)
# ctrl L
library(tidyverse)
readr::read_csv("senado.csv")
readr::read_csv("senado.csv")
readr::read_csv("senado.csv")
readr::read_csv("senado.csv")
readr::read_csv("senado.csv")
read_csv("senado.csv")
read_csv("senado.csv")
# ctrl L
library(tidyverse)
read_csv("senado.csv")
readr::read_csv("senado.csv")
df <- readr::read_csv("senado.csv")
df
View(df)
x = 3.5
class(x)
class(df)
dir()
dir()
df <- readr::read_csv("senndekjndejkado.csv")
?read_csv
A
a
"a"
readr::read_csv(senado.csv)
arquivo_senado <- "senado.csv"
df <- readr::read_csv(arquivo_senado)
df
View(df)
glimpse(df)
summary(df)
?read_csv
# é equivalente a
df <- read_delim("senado.csv")
# é equivalente a
df <- read_delim("senado.csv", delim = ",")
df
dir()
# importando arquivo excel
library(readxl)
?read_excel()
read_excel("planilha.xlsx", sheet = 1)
read_excel("planilha.xlsx", sheet = 2)
readxl::excel_sheets("planilha.xlsx")
read_excel("planilha.xlsx", sheet = "Planilha2")
glimpse(df)
inteiro <- 928
outro.inteiro <- 5e2 # 5 x 10^2
outro.inteiro
decimal <- 182.93
caracter <- 'exportação'
outro.caracter <- "199"
logico <- TRUE
outro.logico <- FALSE
class(logico)
class(caracter)
class(outro.caracter)
inteiro + outro.inteiro
inteiro + outro.caracter
class(decimal)
class(inteiro)
inteiro <- 928L
class(inteiro)
"Meu nome é Sillas, prazer"
"Meu nome é "Sillas", prazer"
"Meu nome é 'Sillas', prazer"
'Meu nome é "Sillas", prazer'
impares <- c(1, 3, 5, 7, 9)
class(impares)
vetor_nomes <- c("Sillas", "Roberto", "Rodrigo")
class(vetor_nomes)
as.character(2)
as.numeric("a")
vetor_misturado <- c("a", 2)
class(vetor_misturado)
vetor_misturado
vetor_misturado_2 <- c(TRUE, 8)
class(vetor_misturado_2)
4 == 5
2 == 2
TRUE == 1
FALSE == 0
glimpse(df)
sum(vetor_misturado_2)
mean(vetor_misturado_2)
sum(vetor_nomes)
vetor_idades <- c(20, 25, 18, "Não informado", 30)
mean(vetor_idades)
as.numeric(vetor_idades])
as.numeric(vetor_idades)
vetor_idades_num <- as.numeric(vetor_idades)
mean(vetor_idades_num)
mean(vetor_idades_num, na.rm = FALSE)
mean(vetor_idades_num, na.rm = TRUE)
vetor_idades
vetor_idades_num
vetor_idades_num[2]
vetor_idades_num[5]
vetor_idades_num[6]
vetor_idades_num[10]
vetor_idades_num[4]
length(vetor_idades_num)
vetor_idades_num[length(vetor_idades_num)]
vetor_idades_num[length(vetor_idades_num) - 1]
vetor_idades_num[4]
vetor_idades_num[4] <- 50
vetor_idades_num
length(vetor_idades_num)
length(vetor_idades_num)
mean(vetor_idades)
mean(vetor_idades_num, na.rm = TRUE)
mean(vetor_idades)
mean(vetor_idades_num)
vetor_idades <- c(20, 25, 18, "Não informado", 30)
mean(vetor_idades)
vetor_idades_num <- as.numeric(vetor_idades)
mean(vetor_idades_num)
#cria-se diferentes vetores
nome <- c('João', 'José', 'Maria', 'Joana')
idade <- c(45, 12, 28, 31)
adulto <- c(TRUE, FALSE, TRUE, TRUE)
uf <- c('DF', 'SP', 'RJ', 'MG')
#cada vetor é uma combinação de elementos de um MESMO tipo de dados
#sendo assim, cada vetor pode ser uma coluna de um data.frame
clientes <- data.frame(nome, idade, adulto, uf)
clientes
glimpse(clientes)
7 + TRUE
2015 > "2016"
"2015" > "2016"
"2014" < 2017
# em alguns casos a coerção irá falhar ou dar resultado indesejado
6 > 100
6 > "100"
"b" > "a"
"a" > "b"
6 > "100" # "6" > "100"
# aeb
# abz
"abz" < "aeb"
# 6
# 100
"6" > "100"
"6" > "1"
6 > 100
#cada vetor é uma combinação de elementos de um MESMO tipo de dados
#sendo assim, cada vetor pode ser uma coluna de um data.frame
clientes <- data.frame(nome, idade, adulto, uf, cor)
clientes
#cada vetor é uma combinação de elementos de um MESMO tipo de dados
#sendo assim, cada vetor pode ser uma coluna de um data.frame
clientes <- data.frame(nome, idade, adulto, uf, cor)
cor <- c("Branca", "Negra", "Branca", NA)
#cada vetor é uma combinação de elementos de um MESMO tipo de dados
#sendo assim, cada vetor pode ser uma coluna de um data.frame
clientes <- data.frame(nome, idade, adulto, uf, cor)
clientes
idade <- c(45, 12, 28, NA)
vetor_idades <- c(20, 25, 18, "Não informado", 30)
mean(vetor_idades)
vetor_idades_num <- as.numeric(vetor_idades)
mean(vetor_idades_num)
x1 <- c(10, NA, 20, NA, 30)
x1[1]
x1[1] <- 5
x1
is.na(x1)
x1[is.na(x1)]
x1 > 15
x1[x1 > 15]
x1[is.na(x1)] <- 0
x1
x1 <- c(10, NA, 20, NA, 30)
is.na(x1)
which(is.na(x1))
x1 <- c(10, NA, 20, NA, 30, 50, NA, NA, NA, 100)
x1[1] <- 5
x1
is.na(x1)
which(is.na(x1))
x1 <- c(10, NA, 20, NA, 30, 50, NA, NA, NA, 100)
x1[1] <- 5
x1
is.na(x1)
which(is.na(x1))
x1[is.na(x1)] <- 0 # x1[c(2, 4, ...)] <- 0
x1
# imprimir algo na tela
print("Oi")
print("Tchau")
x = 400
print("Valor é menor que 500")
x2 = 600
print("Valor é maior ou igual a 500")
x3 = 200
x = 800
print("Valor é menor que 500")
if(x3 < 500){
print("Valor é menor que 500")
} else{
print("Valor é maior ou igual a 500")
}
x3 = 900
if(x3 < 500){
print("Valor é menor que 500")
} else{
print("Valor é maior ou igual a 500")
}
x3 = 900
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
}
x4
x3 = 200
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
}
x4
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
print(x3)
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
print(x3)
}
x3 = 1500
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
print(x3)
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
print(x3)
}
print("O valor de x é :", x3)
str_c(c("O valor de x é: ", x3))
?collapse
collapse(c("O valor de x é: ", x3))
str_c(c("O valor de x é: ", x3), collapse = "")
str_glue("O valor de x é: {x3}")
x3 = 1500
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
print(str_glue("O valor de x é: {x3}"))
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
print(str_glue("O valor de x é: {x3}"))
}
x3 = 100
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
print(str_glue("O valor de x é: {x3}"))
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
print(str_glue("O valor de x é: {x3}"))
}
x3 <- c(100, 600, 800)
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
print(str_glue("O valor de x é: {x3}"))
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
print(str_glue("O valor de x é: {x3}"))
}
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
#print(str_glue("O valor de x é: {x3}"))
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
#print(str_glue("O valor de x é: {x3}"))
}
x3 < 500
ifelse(x3 < 500, "Menor", "Maior ou igual")
x3 = 1000
if(x3 < 500){
print("Valor é menor que 500")
x4 = x3 + 100
#print(str_glue("O valor de x é: {x3}"))
} else{
print("Valor é maior ou igual a 500")
x4 = x3 - 100
stop("Valor é maior. Pare aqui")
#print(str_glue("O valor de x é: {x3}"))
}
x3 < 500
x3 <- c(100, 600, 800)
x3 < 500
ifelse(x3 < 500, "Menor", "Maior ou igual")
ifelse(x3 < 500, x3 / 3, x3 * 9)
for(i in c(1, 3, 5, 7)){
print(i)
print(i * 10)
print("Olá")
print('--------------------')
}
